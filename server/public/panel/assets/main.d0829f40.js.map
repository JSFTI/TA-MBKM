{"version":3,"mappings":"8wCAAMA,GAAqB,UAAM,OAAO,oQAClCC,GAAqB,IAAMC,aAAO,yOAClCC,GAAqB,IAAKD,MAAC,OAAO,oHAClCE,GAAqB,IAAMF,aAAO,4HAElCG,GAAqB,IAAKH,MAAC,OAAO,oHAElCI,GAAS,CAAC,CAAC,KAAO,eAAe,KAAO,gBAAgB,UAAYN,GAAmB,MAAQ,EAAI,EAAE,CAAC,KAAO,mBAAmB,KAAO,oBAAoB,UAAYC,GAAmB,MAAQ,EAAI,EAAE,CAAC,KAAO,qBAAqB,KAAO,sBAAsB,UAAYE,GAAmB,MAAQ,EAAI,EAAE,CAAC,KAAO,yBAAyB,KAAO,0BAA0B,UAAYC,GAAmB,MAAQ,EAAI,EAAE,CAAC,KAAO,QAAQ,KAAO,IAAI,UAAYG,GAAmB,MAAQ,EAAI,EAAE,CAAC,KAAO,MAAM,KAAO,aAAa,UAAYF,GAAmB,MAAQ,EAAI,CAAC,ECPnjBG,MACAC,OCCMC,GAAUC,EAAY,OAAQ,CACzC,MAAO,IAAa,OAAe,IACrC,CAAC,ECJM,SAASC,EAAWC,EAAa,CACtC,OAAIA,EAAI,KAAO,MACPA,IAAI,UAAU,CAAC,GAEhB,0BAAmCA,GAC5C,CAEO,SAASC,GAAaC,EAAY,CACvC,OAAO,IAAI,QAAgB,CAACC,EAASC,IAAW,CACxC,QAAI,IAAI,WAEZC,YAAaC,GAAM,OACb,SAASC,IAAE,SAAF,cAAU,OACrB,UAAOC,GAAW,SAAU,CAC9BJ,EAAO,iBAAkB,EACzB,MACF,CAEAD,EAAQK,CAAM,GAGhBH,EAAE,cAAcH,CAAI,EACrB,CACH,sGClBA,cACAO,QAEAC,+nFCSAC,GAAM,SAAS,QAAU,6BAEzB,MAAMC,GAAUC,GAAc,CAC5B,cACA,aACF,CAAC,EAEKC,GAAQC,GAAY,EAEpBC,EAAMC,GAAUC,EAAG,EACnBC,GAASC,GAAa,CAC1B,QAASC,GAAiB,SAAS,EACnC,SACF,CAAC,EACDL,EAAI,IAAIG,EAAM,EACdH,EAAI,IAAIJ,EAAO,EACfI,EAAI,IAAIF,EAAK,EACbE,EAAI,IAAIM,EAAK,EACbN,EAAI,MAAM,MAAM,EAEhBA,EAAI,OAAO,iBAAiB,OAAS","names":["__pages_import_0__","__pages_import_1__","__vitePreload","__pages_import_2__","__pages_import_3__","__pages_import_5__","routes","__pages_import_4__","isDark","toggleDark","useUser","defineStore","baseUrlApi","url","fileToBase64","file","resolve","reject","f","e","_a","result","open","user","axios","vuetify","createVuetify","pinia","createPinia","app","createApp","App","router","createRouter","createWebHistory","Toast"],"sources":["../../../../../../../../@vite-plugin-pages/generated-pages?id=virtual:generated-pages","../../../../panel/src/composables/dark.ts","../../../../panel/src/stores/useUser.ts","../../../../panel/src/helpers.ts","../../../../panel/src/App.vue","../../../../panel/src/main.ts"],"sourcesContent":["const __pages_import_0__ = () => import(\"/src/pages/users/staffs.vue\");\nconst __pages_import_1__ = () => import(\"/src/pages/settings/profile.vue\");\nconst __pages_import_2__ = () => import(\"/src/pages/inventory/products.vue\");\nconst __pages_import_3__ = () => import(\"/src/pages/inventory/applications.vue\");\nimport __pages_import_4__ from \"/src/pages/index.vue\";\nconst __pages_import_5__ = () => import(\"/src/pages/[...all].vue\");\n\nconst routes = [{\"name\":\"users-staffs\",\"path\":\"/users/staffs\",\"component\":__pages_import_0__,\"props\":true},{\"name\":\"settings-profile\",\"path\":\"/settings/profile\",\"component\":__pages_import_1__,\"props\":true},{\"name\":\"inventory-products\",\"path\":\"/inventory/products\",\"component\":__pages_import_2__,\"props\":true},{\"name\":\"inventory-applications\",\"path\":\"/inventory/applications\",\"component\":__pages_import_3__,\"props\":true},{\"name\":\"index\",\"path\":\"/\",\"component\":__pages_import_4__,\"props\":true},{\"name\":\"all\",\"path\":\"/:all(.*)*\",\"component\":__pages_import_5__,\"props\":true}];\n\nexport default routes;","export const isDark = useDark()\nexport const toggleDark = useToggle(isDark)\n","import { defineStore } from 'pinia';\n\nexport const useUser = defineStore('user', {\n  state: (): User => (window as any).user,\n});\n","export function baseUrlApi(url: string) {\n  if (url[0] === '/')\n    url = url.substring(1)\n\n  return `${import.meta.env.VITE_API_URL}/${url}`\n}\n\nexport function fileToBase64(file: File) {\n  return new Promise<string>((resolve, reject) => {\n    const f = new FileReader();\n\n    f.onloadend = (e) => {\n      const result = e.target?.result;\n      if (typeof result !== 'string') {\n        reject('Can\\'t read file');\n        return;\n      }\n\n      resolve(result);\n    }\n\n    f.readAsDataURL(file);\n  });\n}\n","<script setup lang=\"ts\">\nimport { isDark, toggleDark } from './composables'\nimport { useUser } from './stores/useUser';\nimport { baseUrlApi } from '~/helpers'\n\nconst showNavigation = ref(true)\nconst open = ref<string[]>([]);\n\nconst user = useUser();\n</script>\n\n<template>\n  <VApp>\n    <VThemeProvider :theme=\"isDark ? 'dark' : 'light'\">\n      <VLayout>\n        <VAppBar title=\"Store Admin Panel\">\n          <template #prepend>\n            <VAppBarNavIcon icon=\"i-ic:round-menu\" @click=\"showNavigation = !showNavigation\" />\n          </template>\n          <div class=\"flex gap-3 mr-5\">\n            <VBtn :icon=\"isDark ? 'i-ic:baseline-dark-mode' : 'i-ic:baseline-light-mode'\" @click=\"toggleDark(!isDark)\" />\n            <VBtn :href=\"baseUrlApi('/logout')\" icon=\"i-ic:round-log-out\" @click=\"toggleDark(!isDark)\" />\n          </div>\n        </VAppBar>\n        <VNavigationDrawer v-model=\"showNavigation\" class=\"pt-3\" elevation=\"10\">\n          <VList v-model:opened=\"open\">\n            <VListItem\n              :key=\"(user.profile_picture ?? 'nothing')\"\n              :prepend-avatar=\"baseUrlApi(`/api/users/${user.id}/profile-picture`)\"\n              :subtitle=\"user.role?.display_name\"\n              nav\n            >\n              <template #title>\n                <div class=\"text-lg\">\n                  {{ user.name }}\n                </div>\n              </template>\n            </VListItem>\n            <VDivider class=\"my-5\" />\n            <VListItem prepend-icon=\"i-ic:round-dashboard\" to=\"/\" nav title=\"Dashboard\" />\n            <VListGroup value=\"Inventory\" fluid collapse-icon=\"i-ic:round-keyboard-arrow-up\" expand-icon=\"i-ic:round-keyboard-arrow-down\">\n              <template #activator=\"{ props }\">\n                <VListItem\n                  v-bind=\"props\"\n                  prepend-icon=\"i-ic:baseline-inventory\" nav\n                  title=\"Inventory\"\n                />\n              </template>\n              <VListItem\n                nav title=\"Applications\"\n                prepend-icon=\"i-ic:round-apps\"\n                to=\"/inventory/applications\"\n              />\n              <VListItem\n                nav title=\"Products\"\n                prepend-icon=\"i-mdi:package\"\n                to=\"/inventory/products\"\n              />\n            </VListGroup>\n            <VListItem prepend-icon=\"i-ic:baseline-receipt\" to=\"/orders\" nav title=\"Orders\" />\n            <VListGroup value=\"Users\" collapse-icon=\"i-ic:round-keyboard-arrow-up\" expand-icon=\"i-ic:round-keyboard-arrow-down\">\n              <template #activator=\"{ props }\">\n                <VListItem\n                  v-bind=\"props\"\n                  prepend-icon=\"i-ic:baseline-people\" nav\n                  title=\"Users\"\n                />\n              </template>\n              <VListItem\n                nav title=\"Staffs\"\n                to=\"/users/staffs\"\n              />\n              <VListItem\n                nav title=\"Clients\"\n                to=\"/users/clients\"\n              />\n            </VListGroup>\n            <VListGroup value=\"Settings\" fluid collapse-icon=\"i-ic:round-keyboard-arrow-up\" expand-icon=\"i-ic:round-keyboard-arrow-down\">\n              <template #activator=\"{ props }\">\n                <VListItem\n                  v-bind=\"props\"\n                  prepend-icon=\"i-ic:round-settings\" nav\n                  title=\"Settings\"\n                />\n              </template>\n              <VListItem\n                nav title=\"Carousel\"\n                prepend-icon=\"i-mdi:view-carousel-outline\"\n                to=\"/settings/carousel\"\n              />\n              <VListItem\n                nav title=\"Profile\"\n                prepend-icon=\"i-ic:baseline-person\"\n                to=\"/settings/profile\"\n              />\n            </VListGroup>\n          </VList>\n        </VNavigationDrawer>\n        <VMain tag=\"main\" scrollable class=\"bg-light dark:bg-black\">\n          <div class=\"m-5\">\n            <RouterView />\n          </div>\n        </VMain>\n      </VLayout>\n    </VThemeProvider>\n  </VApp>\n</template>\n","import { createApp } from 'vue'\nimport { createRouter, createWebHistory } from 'vue-router'\nimport routes from 'virtual:generated-pages'\nimport { createVuetify } from 'vuetify'\nimport { createPinia } from 'pinia'\nimport * as components from 'vuetify/components'\nimport * as directives from 'vuetify/directives'\nimport axios from 'axios';\nimport Toast from 'vue-toastification';\nimport App from './App.vue'\n\nimport 'vuetify/styles'\nimport 'cropperjs/dist/cropper.min.css'\nimport './styles/toastification.scss';\nimport './styles/main.scss'\nimport 'uno.css'\n\naxios.defaults.baseURL = `${import.meta.env.VITE_API_URL}/api`;\n\nconst vuetify = createVuetify({\n  components,\n  directives,\n});\n\nconst pinia = createPinia();\n\nconst app = createApp(App)\nconst router = createRouter({\n  history: createWebHistory('/panel/'),\n  routes,\n})\napp.use(router)\napp.use(vuetify)\napp.use(pinia);\napp.use(Toast);\napp.mount('#app')\n\napp.config.globalProperties.window = window\n"],"file":"assets/main.d0829f40.js"}